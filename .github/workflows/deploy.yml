name: Build and Deploy API Gateway

on:
  push:
    branches:
      - main          # Production deployment
      - develop       # Staging deployment
  pull_request:
    branches:
      - main
      - develop

env:
  JAVA_VERSION: '17'
  GRADLE_VERSION: '8.5'

jobs:
  # Build and test job (runs on all branches)
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Run tests
        run: ./gradlew test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/reports/tests/test/

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-gateway-jar
          path: build/libs/*.jar
          retention-days: 7

  # Deploy to staging (on push to develop)
  deploy-staging:
    name: Deploy to Staging
    needs: build-and-test
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://wis-api-gateway-stage.azurewebsites.net

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: api-gateway-jar

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (Staging)
        uses: azure/webapps-deploy@v3
        with:
          app-name: wis-api-gateway-stage
          package: 'wis-api-gateway-*.jar'

      - name: Wait for deployment to complete
        run: sleep 30

      - name: Health check (Staging)
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://wis-api-gateway-stage.azurewebsites.net/actuator/health)
          if [ $response -ne 200 ]; then
            echo "Health check failed with status: $response"
            exit 1
          fi
          echo "Health check passed!"

      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Successfully deployed to staging"
          echo "URL: https://wis-api-gateway-stage.azurewebsites.net"

  # Deploy to production (on push to main)
  deploy-production:
    name: Deploy to Production
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://wis-api-gateway.azurewebsites.net

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: api-gateway-jar

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (Production)
        uses: azure/webapps-deploy@v3
        with:
          app-name: wis-api-gateway
          package: 'wis-api-gateway-*.jar'

      - name: Wait for deployment to complete
        run: sleep 30

      - name: Health check (Production)
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://wis-api-gateway.azurewebsites.net/actuator/health)
          if [ $response -ne 200 ]; then
            echo "Health check failed with status: $response"
            exit 1
          fi
          echo "Health check passed!"

      - name: Smoke tests (Production)
        run: |
          # Test home endpoint
          curl -f https://wis-api-gateway.azurewebsites.net/ || exit 1

          # Test that protected endpoints require auth
          status=$(curl -s -o /dev/null -w "%{http_code}" https://wis-api-gateway.azurewebsites.net/api/subscriptions/test)
          if [ $status -ne 401 ]; then
            echo "Authentication check failed - expected 401, got $status"
            exit 1
          fi

          echo "✅ All smoke tests passed!"

      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Successfully deployed to production"
          echo "URL: https://wis-api-gateway.azurewebsites.net"
